<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eric fuerstenberg</title>
    <link>https://hierux.cloud/</link>
    <description>Recent content on eric fuerstenberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Apr 2020 17:33:31 -0700</lastBuildDate>
    
	<atom:link href="https://hierux.cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automating with Terraform and CodeShip</title>
      <link>https://hierux.cloud/posts/terraform-cicd-codeship/</link>
      <pubDate>Sat, 25 Apr 2020 17:33:31 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/terraform-cicd-codeship/</guid>
      <description>Tear it down and automate! Today I completely tore down my existing infrastructure for this static website and rebuilt the entire thing in Terraform! They say you never truly understand something until you can write automation, tear it down, and rebuild it in just a few minutes. See updates to the git repo here.
I&amp;rsquo;m one step closer in the pursuit of everything-as-code!
This site still relies on the same underlying infrastructure: AWS S3 for static hosting, Route53 for DNS, and CloudFront for CDN and SSL, but I also integrated a CI/CD pipeline using CodeShip to increase the efficiency of pushing changes to production.</description>
    </item>
    
    <item>
      <title>Today I learned..</title>
      <link>https://hierux.cloud/posts/daily1/</link>
      <pubDate>Wed, 22 Apr 2020 08:07:23 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/daily1/</guid>
      <description>Here&amp;rsquo;s what I&amp;rsquo;m up to today.  Studying python Alerts as code! Continuing my work on templatizing alerts and dashboards in Terraform, using the Wavefront TF provider integration. Creating a framework to programmatically manage all of my team&amp;rsquo;s active alerts and dashboards in Wavefront using Terraform. Making small tweaks to this Hugo site.  to-do list includes:  add an &amp;ldquo;about me&amp;rdquo; &amp;amp; skills section configure the infrastructure in terraform (s3 buckets, route53 dns assignments, cloudfront distribution) set up ci/cd pipeline using codeship for automatic deployments      </description>
    </item>
    
    <item>
      <title>Hosting a high performance static site with S3, Route53, &amp; SSL via CloudFront</title>
      <link>https://hierux.cloud/posts/static-s3-ssl-cloudfront/</link>
      <pubDate>Sat, 18 Apr 2020 14:39:34 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/static-s3-ssl-cloudfront/</guid>
      <description>Update: Hugo I recently reconfigured my static website (still hosted at cloud.hierux.com) into a more feature rich site using Hugo - you&amp;rsquo;re looking at it right now! This allows me to make use of style templates and other feature enhancements while keeping things simple with markdown.
You can find the Hugo-ified version of my website in my Github repo.
I&amp;rsquo;ve hosted static sites using a number of different strategies in the past.</description>
    </item>
    
    <item>
      <title>Terraform, AWS, and other personal progress</title>
      <link>https://hierux.cloud/posts/historical/</link>
      <pubDate>Sat, 18 Apr 2020 08:46:50 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/historical/</guid>
      <description>Notes step by step: 04/15/20
1. working with terraform and ec2
- creating instances using amis
- running bootstrap script to configure instance as webserver
- configure security groups (ingress/egress on ports 80 &amp;amp; 443)
- assign security groups to ec2 instances
- capture public/private ips of instances as output
Â to do:
1. configure this static side in hugo
2. set up s3 bucket for static hosting in aws and use terraform to manage this process</description>
    </item>
    
    <item>
      <title>Reference: Hugo coder wiki</title>
      <link>https://hierux.cloud/posts/hugo-coder-wiki/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/posts/hugo-coder-wiki/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://hierux.cloud/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.
Setup Some fun facts about Hugo:
 Built in Go Loosely inspired by Jekyll Primarily developed by spf13 on the train while commuting to and from Manhattan. Coded in Vim using spf13-vim  Have questions or suggestions?</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://hierux.cloud/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/contact/</guid>
      <description>Follow me, @ericfuerstenberg.</description>
    </item>
    
    <item>
      <title>First snippet</title>
      <link>https://hierux.cloud/snippets/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/snippets/first/</guid>
      <description>This content is in snippets/first/index.md
pwd </description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://hierux.cloud/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/projects/</guid>
      <description>Nothing to see here&amp;hellip; Move along!</description>
    </item>
    
    <item>
      <title>Second snippet</title>
      <link>https://hierux.cloud/snippets/second/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hierux.cloud/snippets/second/</guid>
      <description>This content is in snippets/second/index.md
ls -la </description>
    </item>
    
  </channel>
</rss>