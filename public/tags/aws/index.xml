<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on eric fuerstenberg</title>
    <link>https://www.hierux.cloud/tags/aws/</link>
    <description>Recent content in aws on eric fuerstenberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 18 Apr 2020 14:39:34 -0700</lastBuildDate>
    
	<atom:link href="https://www.hierux.cloud/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hosting a high performance static site with S3, Route53, &amp; SSL via CloudFront</title>
      <link>https://www.hierux.cloud/posts/static-s3-ssl-cloudfront/</link>
      <pubDate>Sat, 18 Apr 2020 14:39:34 -0700</pubDate>
      
      <guid>https://www.hierux.cloud/posts/static-s3-ssl-cloudfront/</guid>
      <description>Update: Hugo I recently reconfigured my static website (still hosted at cloud.hierux.com) into a more feature rich site using Hugo - you&amp;rsquo;re looking at it right now! This allows me to make use of style templates and other feature enhancements while keeping things simple with markdown.
You can find the Hugo-ified version of my website in my Github repo.
I&amp;rsquo;ve hosted static sites using a number of different strategies in the past.</description>
    </item>
    
    <item>
      <title>Terraform, AWS, and other personal progress</title>
      <link>https://www.hierux.cloud/posts/historical/</link>
      <pubDate>Sat, 18 Apr 2020 08:46:50 -0700</pubDate>
      
      <guid>https://www.hierux.cloud/posts/historical/</guid>
      <description>Notes step by step: 04/15/20
1. working with terraform and ec2
- creating instances using amis
- running bootstrap script to configure instance as webserver
- configure security groups (ingress/egress on ports 80 &amp;amp; 443)
- assign security groups to ec2 instances
- capture public/private ips of instances as output
Â to do:
1. configure this static side in hugo
2. set up s3 bucket for static hosting in aws and use terraform to manage this process</description>
    </item>
    
  </channel>
</rss>