<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>terraform on eric fuerstenberg</title>
    <link>https://hierux.cloud/tags/terraform/</link>
    <description>Recent content in terraform on eric fuerstenberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Apr 2020 08:07:23 -0700</lastBuildDate>
    
	<atom:link href="https://hierux.cloud/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Today I learned..</title>
      <link>https://hierux.cloud/posts/daily1/</link>
      <pubDate>Wed, 22 Apr 2020 08:07:23 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/daily1/</guid>
      <description>Here&amp;rsquo;s what I&amp;rsquo;m up to today.  Studying python Alerts as code! Continuing my work on templatizing alerts and dashboards in Terraform, using the Wavefront TF provider integration. Creating a framework to programmatically manage all of my team&amp;rsquo;s active alerts and dashboards in Wavefront using Terraform. Making small tweaks to this Hugo site.  to-do list includes:  add an &amp;ldquo;about me&amp;rdquo; &amp;amp; skills section configure the infrastructure in terraform (s3 buckets, route53 dns assignments, cloudfront distribution) set up ci/cd pipeline using codeship for automatic deployments      </description>
    </item>
    
    <item>
      <title>Terraform, AWS, and other personal progress</title>
      <link>https://hierux.cloud/posts/historical/</link>
      <pubDate>Sat, 18 Apr 2020 08:46:50 -0700</pubDate>
      
      <guid>https://hierux.cloud/posts/historical/</guid>
      <description>Notes step by step: 04/15/20
1. working with terraform and ec2
- creating instances using amis
- running bootstrap script to configure instance as webserver
- configure security groups (ingress/egress on ports 80 &amp;amp; 443)
- assign security groups to ec2 instances
- capture public/private ips of instances as output
Â to do:
1. configure this static side in hugo
2. set up s3 bucket for static hosting in aws and use terraform to manage this process</description>
    </item>
    
  </channel>
</rss>